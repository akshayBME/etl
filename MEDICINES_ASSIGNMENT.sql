USE EXERCISE_CONSTRAINTS;
SELECT *
FROM MEDICINES;

SELECT *
FROM MEDICINE_COMPANY;

;

-- FIRST PLEASE WRITE ALL JOIN QUERIES USING THESE 2 TABLES 
--(INNER JOIN, LEFT JOIN, RIGHT JOIN & FULL JOIN)

SELECT * FROM MEDICINE_COMPANY MC
INNER JOIN MEDICINES M ON MC.M_COMP_ID = M.M_COMP_ID;

SELECT * FROM MEDICINE_COMPANY MC
LEFT JOIN MEDICINES M ON MC.M_COMP_ID = M.M_COMP_ID;

SELECT * FROM MEDICINE_COMPANY MC
RIGHT JOIN MEDICINES M ON MC.M_COMP_ID = M.M_COMP_ID;


SELECT * FROM MEDICINE_COMPANY MC
FULL JOIN MEDICINES M ON MC.M_COMP_ID = M.M_COMP_ID;


--1) WRITE A QUERY TO DISPLAY ALL COMPANYNAMES AND THEIR RESPECTIVE MEDICINES IN ORDER
 SELECT M_COMP_NAME, M_NAME FROM MEDICINES M
 INNER JOIN MEDICINE_COMPANY MC ON 
 M.M_COMP_ID = MC.M_COMP_ID
 ORDER BY M_COMP_NAME;


--2) WRITE A QUERY TO DISPLAY ALL COMPANYNAMES AND THE NUMBER OF MEDICINES FOR EACH COMPANY
-- EXIST IN THE PHARMACY
SELECT M_COMP_NAME, SUM(M_QTY) FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
GROUP BY M_COMP_NAME;

--3) WRITE A QUERY TO DISPLAY ALL THE COMPANY NAMES WHICH HAS NO MEDICINES IN THE PHARMACY
SELECT M_COMP_NAME FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
WHERE M_NAME IS NULL;

--4) WRITE A QUERY TO DISPLAY NUMBER OF MEDICINE COMPANIES STOCK EXIST IN THE PHARMACY
SELECT M_COMP_NAME, SUM(M_QTY) FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
GROUP BY M_COMP_NAME;


--5) WRITE A QUERY TO DISPLAY THE COMPANY NAMES WHICH HAS MORE THAN 
--2 TYPES OF MEDICINES IN THE PHARMACY
SELECT M_COMP_NAME FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
GROUP BY M_COMP_NAME HAVING COUNT(M_COMP_NAME) >2;


--6) WRITE A QUERY TO DISPLAY THE COMPANY NAMES WHICH HAS MORE TYPES OF MEDICINES 
--IN THE PHARMACY
SELECT M_COMP_NAME FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
GROUP BY M_COMP_NAME HAVING COUNT(M_COMP_NAME) >1;

--7) WRITE A QUERY TO DISPLAY COMPANYNAME,TOTAL QUNTITY OF MEDICINES AND TOTAL PRICE OF
 --MEDICINES IN THE PHARMACY
 SELECT M_COMP_NAME, SUM(M_QTY) AS TOTAL_MEDICINE, SUM(M_PRICE) AS TOTAL_PRICE FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
GROUP BY M_COMP_NAME;


--8) WRITE A QUERY TO DISPLAY COMPANY NAME AND MEDICINE NAME WHERE THE COMPANY NAME HAS MORE
-- THAN 10 LETTERS 
SELECT M_COMP_NAME, M_NAME FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
WHERE M_COMP_NAME LIKE '__________%';

--9) DISPLAY COMPANY NAME AND MEDICINE NAME WHICH HAS LTD IN THE COMPANY NAME 
SELECT M_COMP_NAME, M_NAME FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
WHERE M_COMP_NAME LIKE '%LTD';


--10) DISPLAY ALL COMPANY & MEDICINE NAMES WHICH ARE GOING TO EXPIRE WITHIN AN YEAR
SELECT M_COMP_NAME, M_NAME FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
WHERE DATEDIFF (YEAR, M_MFG_DATE, GETDATE()) = 1;

--11) DISPLAY ALL COMPANY NAMES,  MEDICINE NAMES, MFG DATE & EXPIRY DATE WHICH HAS EXPIRY 
--PERIOD MORE THAN 3 YEARS IN THE PHARMACY
SELECT M_COMP_NAME, M_NAME, M_MFG_DATE, M_EXP_DATE FROM MEDICINES M
JOIN MEDICINE_COMPANY MC ON 
M.M_COMP_ID = MC.M_COMP_ID
WHERE DATEDIFF (YEAR, M_MFG_DATE, M_EXP_DATE) >= 3;



